name: Snyk
on:
  pull_request_target:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

env:
  SNYK_CFG_ORG: 84f53b20-a807-4dab-a295-fcf9ace978d7
  
jobs:
  oss:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.snyk.io:443
            github.com:443
            registry.npmjs.org:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5.2.2
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --all-projects --dev --prune-repeated-subdependencies

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('snyk.sarif') != ''
        with:
          sarif_file: snyk.sarif
          category: "Snyk Open Source"

      - name: Run Snyk to check for vulnerabilities (monitor)
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --all-projects --dev --print-deps --prune-repeated-subdependencies
  
  code:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.snyk.io:443
            github.com:443
            registry.npmjs.org:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5.2.2

      - name: Run Snyk to scan for bad code
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk-code.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('snyk-code.sarif') != ''
        with:
          sarif_file: snyk-code.sarif
          category: "Snyk Code"
  
  container:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.snyk.io:443
            edgedl.me.gvt1.com:443
            github.com:443
            registry.npmjs.org:443
            release-assets.githubusercontent.com:443
            storage.googleapis.com:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5.2.2
      - name: Build a Docker image
        run: |
          npm ci
          npm run build -ws --if-present
          npm run build:docker -ws --if-present

      - name: Run Snyk to check for vulnerabilities (monitor)
        uses: snyk/actions/docker@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: container monitor
          image: markdown-confluence/markdown-confluence
          args: --file=packages/cli/Dockerfile

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: markdown-confluence/markdown-confluence
          args: --file=packages/cli/Dockerfile --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('snyk.sarif') != ''
        with:
          sarif_file: snyk.sarif

  sbom:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.snyk.io:443
            github.com:443
            registry.npmjs.org:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v5.2.2
      - name: Run Snyk to create SBOM
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: sbom
          args: --format=cyclonedx1.4+json
  
  check_jobs:
    runs-on: ubuntu-latest
    needs: [oss, code, container, sbom]
    steps:
      - name: Check if any previous jobs failed
        run: echo "All previous jobs succeeded."
