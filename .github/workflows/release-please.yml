on:
  push:
    branches:
      - main

permissions:
  contents: read

name: release-please

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "markdown-confluence/publish"

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      CurrentVersion: ${{ steps.releaseassets.outputs.CurrentVersion }}
    permissions:
      contents: write
      pull-requests: write
      id-token: write
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - id: release-please
        uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4.1.1
        with:
          command: manifest
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
      
      - name: Use Node.js
        if: ${{ steps.release-please.outputs.release_created }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "16.x"
          registry-url: 'https://registry.npmjs.org'

      - name: Latest NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: npm install -g npm@9.6.5

      - name: Checkout source repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: markdown-confluence/obsidian-integration
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
          path: ./.release-repo

      - name: Upload release assets
        id: releaseassets
        if: ${{ steps.release-please.outputs.release_created }}
        run: ./.build/upload-release-assets.sh ${{ steps.release-please.outputs.tag_name }} ${{ steps.release-please.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_PAT }}

      - name: Publish to NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          npm publish -w @markdown-confluence/lib
          npm publish -w @markdown-confluence/mermaid-electron-renderer
          npm publish -w @markdown-confluence/mermaid-puppeteer-renderer
          npm publish -w @markdown-confluence/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Set up QEMU
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log in to the Container registry
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_PLEASE_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ steps.release-please.outputs.release_created }}
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.release-please.outputs.major }}
            type=raw,value=${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}
            type=raw,pattern={{version}},value=v${{ steps.releaseassets.outputs.CurrentVersion }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: packages/cli
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
